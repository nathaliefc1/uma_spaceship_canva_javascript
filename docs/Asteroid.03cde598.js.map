{"version":3,"sources":["utils/getRandom.js","src/actors/Asteroid.js"],"names":["randomY","Math","floor","random","randomX","asteroidImg","require","Asteroid","pos","x","y","size","w","h","asteroidColor","xSpeed","directionX","asteroidSize","image","Image","src","asteroids","asteroidLimit","canvasWidth","frame","ctx","delta","fillStyle","fillRect","drawImage","key"],"mappings":";AAYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,aAAA,EAZA,IAAMA,EAAU,WACPC,OAAAA,KAAKC,MAAuB,IAAjBD,KAAKE,UAAwB,GAWjD,QAAA,QAAA,EARA,IAAMC,EAAU,WACPH,OAAAA,KAAKC,MAAuB,IAAjBD,KAAKE,SAAuB,MAOhD,QAAA,QAAA;;;;ACsB0B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAlC1B,IAAA,EAAA,QAAA,yBAkC0B,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjC1B,IAAME,EAAcC,QAAQ,6BAGtBC,EAAAA,WAC2E,SAAA,IAAnEC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,CAAEC,GAAG,EAAY,EAAA,WAAA,EAAGC,GAAG,EAAA,EAAA,YAAaC,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,CAAEC,EAAG,GAAIC,EAAG,IAAM,EAAA,KAAA,GACxEC,KAAAA,cAAgB,SAChBN,KAAAA,IAAMA,EACNO,KAAAA,OAAS,EACTC,KAAAA,WAAa,EACbC,KAAAA,aAAeN,EACfO,KAAAA,MAAQ,IAAIC,MACZD,KAAAA,MAAME,IAAMf,EACZgB,KAAAA,UAAY,GACZC,KAAAA,cAAgB,GAChBC,KAAAA,YAAc,IAmBG,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAhBxB,MAAA,SAAOC,GACD,KAAKhB,IAAIC,GAAK,KAAKc,aAAe,KAAKf,IAAIC,IAAM,EAC9CD,KAAAA,IAAIC,GAAK,KAAKM,OAAS,KAAKC,YAE5BR,KAAAA,IAAIC,GAAI,EAAb,EAAA,WACKD,KAAAA,IAAIE,GAAI,EAAb,EAAA,cAWoB,CAAA,IAAA,OAPxB,MAAA,SAAKe,EAAKC,GACRD,EAAIE,UAAY,KAAKb,cACrBW,EAAIG,SAAS,KAAKpB,IAAIC,EAAG,KAAKD,IAAIE,EAAG,KAAKO,aAAaL,EAAI,GAAI,KAAKK,aAAaJ,EAAI,IACrFY,EAAII,UAAU,KAAKX,MAAO,KAAKV,IAAIC,EAAI,EAAG,KAAKD,IAAIE,EAAI,EAAG,KAAKO,aAAaL,EAAG,KAAKK,aAAaJ,KAI3E,CAAA,IAAA,oBADxB,MAAA,SAAkBiB,MACM,CAAA,IAAA,kBAAxB,MAAA,SAAgBA,QAAQ,EA9BpBvB,GA8BoB,QAAA,SAAA","file":"Asteroid.03cde598.js","sourceRoot":"..","sourcesContent":["const randomY = () => {\r\n  return Math.floor(Math.random() * (600 - 1)) + 1;\r\n};\r\n\r\nconst randomX = () => {\r\n  return Math.floor(Math.random() * (0 + 800) - 800);\r\n};\r\n\r\nexport { randomY, randomX };\r\n\r\n// Retorna un entero aleatorio entre min (incluido) y max (excluido)\r\n// ¡Usando Math.round() te dará una distribución no-uniforme!\r\n// function getRandomInt(min, max) { return Math.floor(Math.random() * (max - min)) + min;}\r\n","import { randomX, randomY } from \"../../utils/getRandom\";\r\nconst asteroidImg = require(\"../../assets/asteroid.png\");\r\n\r\n\r\nclass Asteroid {\r\n  constructor(pos = { x: randomX() - 4, y: randomY() }, size = { w: 25, h: 25 }) {\r\n    this.asteroidColor = \"yellow\";\r\n    this.pos = pos;\r\n    this.xSpeed = 3;\r\n    this.directionX = +1;\r\n    this.asteroidSize = size;\r\n    this.image = new Image();\r\n    this.image.src = asteroidImg;\r\n    this.asteroids = [];\r\n    this.asteroidLimit = 20;\r\n    this.canvasWidth = 800;\r\n  }\r\n\r\n  update(frame) {\r\n    if (this.pos.x <= this.canvasWidth && this.pos.x >= -5) {\r\n      this.pos.x += this.xSpeed * this.directionX;\r\n    } else {\r\n      this.pos.x = randomX();\r\n      this.pos.y = randomY();\r\n    }\r\n  }\r\n\r\n  draw(ctx, delta) {\r\n    ctx.fillStyle = this.asteroidColor;\r\n    ctx.fillRect(this.pos.x, this.pos.y, this.asteroidSize.w - 10, this.asteroidSize.h - 10);\r\n    ctx.drawImage(this.image, this.pos.x - 5, this.pos.y - 5, this.asteroidSize.w, this.asteroidSize.h);\r\n  }\r\n\r\n  keyboardEventDown(key) { }\r\n  keyboardEventUp(key) { }\r\n\r\n}\r\n\r\nexport { Asteroid };\r\n"]}